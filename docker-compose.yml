#DOCKER COMPOSE CONFIGURATION FILE
version: "3.9" #version of the docker-compose syntax that we gonna using

services:
  app:
    build:
      context: . #means build the docker file inside our current directory
      args:
        - DEV=true
    ports: # port mapping
      - "8000:8000" #this maps port 8000 on our local machine to port 8000 in our DOCKER CONTAINER 
    volumes: # Volumes are way of mapping directories from our system into our docker container
      - ./app:/app # we dont need to rebuild our container every time we make changes in local, instead we sync the code in local to the code in container
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - db_PASS=changeme
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment: #here below we are setting intial Database configuration for our DB Service, creating DEV credentials for local development database
      - POSTGRES_DB=devdb #create database with given name
      - POSTGRES_USER=devuser #create user
      - POSTGRES_PASSWORD=changeme #password set


volumes:
  dev-db-data: # name of our volume


# docker-compose build ===> build our docker image